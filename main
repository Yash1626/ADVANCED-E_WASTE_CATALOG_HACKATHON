from datetime import datetime, timedelta

# Simple E-waste Monitoring System with Consumer and Organization login

# Simulated database for user management
consumers_db = {
    "consumer1": {"password": "pass123", "e_waste": [], "rewards": 0},
    "consumer2": {"password": "password", "e_waste": [], "rewards": 0},
}

organizations_db = {
    "org1": {"password": "orgpass123", "e_waste": [], "rewards": 0},
    "org2": {"password": "orgpassword", "e_waste": [], "rewards": 0},
}

# Function to simulate user login
def login():
    print("\nPlease select:")
    print("1. Consumer Login")
    print("2. Organization Login")
    
    login_type = input("\nEnter your choice (1-2): ")
    
    if login_type == '1':
        user_db = consumers_db
        user_type = "Consumer"
    elif login_type == '2':
        user_db = organizations_db
        user_type = "Organization"
    else:
        print("\nInvalid choice. Please try again.")
        return None, None

    user_id = input(f"\nEnter {user_type} ID: ")
    if user_id in user_db:
        password = input("\nEnter Password: ")
        if user_db[user_id]["password"] == password:
            print(f"\n{user_type} Login successful!")
            return user_id, user_type
        else:
            print("\nIncorrect password.")
            return None, None
    else:
        print(f"\n{user_type} ID not found.")
        return None, None

# Function to log e-waste item
def log_e_waste(user_db, user_id):
    print("\nSelect the category your product belongs to:")
    print("1 - Computers")
    print("2 - Mobile Phones")
    print("3 - Televisions/Screens")
    print("4 - Tablets/iPads")
    print("5 - Sound Systems")
    print("6 - Other Smart Devices")
    print("7 - Wires/Accessories")
    
    category_choice = input("\nEnter your choice (1-7): ")
    categories = {
        '1': 'Computers',
        '2': 'Mobile Phones',
        '3': 'Televisions/Screens',
        '4': 'Tablets/iPads',
        '5': 'Sound Systems',
        '6': 'Other Smart Devices',
        '7': 'Wires/Accessories'
    }
    category = categories.get(category_choice, "Unknown")
    
    product_name = input("\nEnter the product name: ")
    product_company = input("\nEnter the company name: ")
    
    performance_rating = input("\nRate the current performance of your device (1-5, low-high): ")
    
    print("\nWould you like to:")
    print("1 - Schedule a pickup")
    print("2 - Visit a nearby e-waste collection station")
    
    pickup_choice = input("\nEnter your choice (1-2): ")

    # Date selection options
    def get_scheduled_date(choice):
        if choice == '1':
            return datetime.today()
        elif choice == '2':
            return datetime.today() + timedelta(days=1)
        elif choice == '3':
            return datetime.today() + timedelta(days=2)
        elif choice == '4':
            return datetime.today() + timedelta(days=4)
        elif choice == '5':
            return datetime.today() + timedelta(days=6)
        else:
            print("\nInvalid choice.")
            return None

    if pickup_choice == '1':
        pincode = input("\nEnter your pincode: ")
        address = input("\nEnter your address: ")
        print("\nChoose your pickup date:")
        print("1 - Today")
        print("2 - Tomorrow")
        print("3 - Day after tomorrow")
        print("4 - After 4 days")
        print("5 - After 6 days")

        date_choice = input("\nEnter your choice (1-5): ")
        pickup_date = get_scheduled_date(date_choice)
        if pickup_date:
            formatted_date = pickup_date.strftime("%d-%m-%Y")
            print(f"\nPickup scheduled for {product_name} on {formatted_date} at {address}, {pincode}.")
            print("\nA charge of 20 bucks will be applied for the pickup.")
            # Log the pickup request in the e-waste history
            user_db[user_id]["e_waste"].append({
                "category": category,
                "name": product_name,
                "company": product_company,
                "performance_rating": performance_rating,
                "pickup_choice": "Pickup",
                "pincode": pincode,
                "address": address,
                "date": formatted_date
            })
    elif pickup_choice == '2':
        pincode = input("\nEnter your pincode: ")
        address = input("\nEnter the address of the collection station: ")
        print("\nChoose your visit date:")
        print("1 - Today")
        print("2 - Tomorrow")
        print("3 - Day after tomorrow")
        print("4 - After 4 days")
        print("5 - After 6 days")

        date_choice = input("\nEnter your choice (1-5): ")
        visit_date = get_scheduled_date(date_choice)
        if visit_date:
            formatted_date = visit_date.strftime("%d-%m-%Y")
            print(f"\nVisit scheduled for {product_name} on {formatted_date} at {address}, {pincode}.")
            # Log the store visit request in the e-waste history
            user_db[user_id]["e_waste"].append({
                "category": category,
                "name": product_name,
                "company": product_company,
                "performance_rating": performance_rating,
                "pickup_choice": "Store Visit",
                "pincode": pincode,
                "address": address,
                "date": formatted_date
            })
    else:
        print("\nInvalid choice.")
        return
    
    # Log 100 points to the user's reward balance
    user_db[user_id]["rewards"] += 100
    
    print(f"\nYour product '{product_name}' has been logged in and you received rewards of 100 points!")

# Function to view e-waste history
def view_e_waste_history(user_db, user_id):
    if user_db[user_id]["e_waste"]:
        print("\nE-waste history:")
        for item in user_db[user_id]["e_waste"]:
            print(f" - {item['name']} ({item['category']})")
    else:
        print("\nNo e-waste logged yet.")

# Function to check status
def check_status(user_db, user_id):
    print("\nCheck Status:")
    print("1 - Pickup Request")
    print("2 - Store Visit Request")
    print("3 - Reward Points")
    
    status_choice = input("\nEnter your choice (1-3): ")
    
    if status_choice == '1':
        print("\nPickup Requests:")
        for item in user_db[user_id]["e_waste"]:
            if item['pickup_choice'] == "Pickup":
                print(f"\n{item['name']} will be picked up on {item['date']} at {item['address']}, {item['pincode']}.")
    elif status_choice == '2':
        print("\nStore Visit Requests:")
        for item in user_db[user_id]["e_waste"]:
            if item['pickup_choice'] == "Store Visit":
                print(f"\n{item['name']} store visit is scheduled on {item['date']} at {item['address']}, {item['pincode']}.")
    elif status_choice == '3':
        print(f"\nYou have {user_db[user_id]['rewards']} reward points.")
    else:
        print("\nInvalid choice. Please try again.")

# Function to redeem rewards
def redeem_rewards(user_db, user_id):
    if user_db[user_id]['rewards'] > 0:
        old_rewards = user_db[user_id]['rewards']
        user_db[user_id]['rewards'] = 0
        print(f"\nYour reward points ({old_rewards}) have been sent, waiting to be claimed to your mail.")
        print("Thanks for supporting mankind and sustainability!")
        # Log reward redemption in the e-waste history
        user_db[user_id]["e_waste"].append({
            "category": "Reward Redemption",
            "name": f"{old_rewards} points redeemed",
            "company": "",
            "performance_rating": "",
            "pickup_choice": "",
            "pincode": "",
            "address": "",
            "date": datetime.today().strftime("%d-%m-%Y")
        })
    else:
        print("\nYou have no rewards to redeem.")

# Organization-specific functions

# Function to check pickup orders
def check_pickup_orders():
    print("\n**This option works with a database to display pincodes from where requests have been taken.**")
    print("\nDisplaying pincodes where requests have been taken (simulated):")
    print("\nPincodes:")
    print(" - 123456")
    print(" - 654321")
    print(" - 112233")

# Function to view reward requests
def view_reward_requests():
    print("\n**This option works with a database to display reward requests.**")
    print("\nDisplaying reward requests (simulated):")
    print("\nReward Requests:")
    print(" - consumer1: 100 points")
    print(" - consumer2: 200 points")

# Function to view reports
def view_reports():
    print("\n**This option works with a database to display various reports on E-waste collection.**")
    print("\nDisplaying reports (simulated):")
    print("\nReports:")
    print(" - Monthly Collection Report")
    print(" - Yearly Collection Report")
    print(" - Environmental Impact Report")

# Function to check total delivery fee accumulated
def check_total_delivery_fee_accumulated():
    print("\n**This option works with a database to calculate and display total delivery fees accumulated.**")
    print("\nTotal delivery fees accumulated (simulated):")
    print(" - $60")

# Main function to simulate the system
def e_waste_monitoring_system():
    print("\nWelcome to the E-waste Monitoring System")
    
    user_id, user_type = None, None
    while user_id is None:
        user_id, user_type = login()

    if user_type == "Consumer":
        while True:
            print("\nMenu:")
            print("1. Log E-waste Item")
            print("2. View E-waste History")
            print("3. Check Status")
            print("4. Redeem Rewards")
            print("5. Logout")
            
            choice = input("\nEnter your choice (1-5): ")
            
            if choice == '1':
                log_e_waste(consumers_db, user_id)
            elif choice == '2':
                view_e_waste_history(consumers_db, user_id)
            elif choice == '3':
                check_status(consumers_db, user_id)
            elif choice == '4':
                redeem_rewards(consumers_db, user_id)
            elif choice == '5':
                print("\nLogging out...")
                break
            else:
                print("\nInvalid choice. Please try again.")

    elif user_type == "Organization":
        while True:
            print("\nOrganization Menu:")
            print("1. Check Pickup Orders")
            print("2. View Reward Requests")
            print("3. View Reports")
            print("4. Check Total Delivery Fee Accumulated")
            print("5. Logout")
            
            choice = input("\nEnter your choice (1-5): ")
            
            if choice == '1':
                check_pickup_orders()
            elif choice == '2':
                view_reward_requests()
            elif choice == '3':
                view_reports()
            elif choice == '4':
                check_total_delivery_fee_accumulated()
            elif choice == '5':
                print("\nLogging out...")
                break
            else:
                print("\nInvalid choice. Please try again.")

if __name__ == "__main__":
    e_waste_monitoring_system()
